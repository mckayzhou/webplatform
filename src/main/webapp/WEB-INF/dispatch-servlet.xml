<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans  
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd"
       default-lazy-init="false">

    <context:component-scan base-package="com.mckay.controller"/>

    <!--处理静态资源-->
    <mvc:resources mapping="/resource/**" location="/resources/"
                   cache-period="86400"/>

    <!-- 通用视图解析器 -->
    <bean id="viewResolverCommon"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/page/"/>
        <property name="suffix" value=".jsp"/><!-- 可为空，方便实现根据自己的扩展名来选择视图解释类的逻辑 -->
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.InternalResourceView</value>
        </property>
        <property name="order" value="1"/>
    </bean>

    <!-- 配置velocity视图解析器 -->
    <bean id="velocityConfigurer"
          class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath"><!-- 页面文件的路径,相对于webapp -->
            <value>vm</value>
        </property>

        <!-- Velocity属性配置 -->
        <property name="velocityProperties">
            <props>
                <prop key="file.resource.loader.cache">true</prop>
                <prop key="file.resource.loader.modificationCheckInterval">2</prop>
                <prop key="input.encoding">UTF-8</prop>
                <!-- 指定模板引擎进行模板处理的编码 -->
                <prop key="output.encoding">UTF-8</prop>
                <!-- 指定输出流的编码 -->
                <prop key="contentType">text/html;charset=UTF-8</prop>
            </props>
        </property>
    </bean>

    <!-- View resolvers can also be configured with ResourceBundles or XML files.
        If you need different view resolving based on Locale, you have to use the
        resource bundle resolver. -->

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">

        <property name="cache" value="false"/>
        <!--是否缓存模板 -->
        <property name="prefix" value=""/>
        <property name="suffix" value=".vm"/>

        <!--toolbox配置文件路径 -->
        <!--<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml"
            /> -->

        <!-- <property name="dateToolAttribute" value="date" />日期函数名称 -->
        <!--<property name="numberToolAttribute" value="number" />数字函数名称 -->

        <property name="contentType" value="text/html;charset=UTF-8"/>

        <property name="exposeSpringMacroHelpers" value="true"/>
        <!--是否使用spring对宏定义的支持 -->
        <property name="exposeRequestAttributes" value="true"/>
        <!--是否开放request属性 -->
        <property name="requestContextAttribute" value="rc"/>
        <!--request属性引用名称 -->
        <property name="exposeSessionAttributes" value="true"></property>
        <property name="allowSessionOverride" value="true"/>
        <!--允许session覆盖旧值 VelocityViewResolver配置 -->
        <property name="allowRequestOverride" value="true"></property>

        <property name="layoutUrl" value="layout/default.vm"/>
        <!--指定layout文件 -->

    </bean>


    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="100000000"/>
    </bean>

    <mvc:annotation-driven>
        <!-- 消息转换器 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

</beans>